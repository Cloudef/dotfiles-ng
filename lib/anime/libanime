#!/bin/bash
# common source file for anime functions
#
# needs: mlocate, sed, perl

CACHE_IGNORE_EGREP='\.srt|\.ass|\.sfv'
CACHE_STORE_REGEX='s/\..\{3\}$//;s/\[[^]]*\]//g;s/([^)]*)//g;s/[_.]/ /g;s/^[- ]*//g;s/[- ]*$//g;s/v[0-9]//;s/  ?*/ /g'
CACHE_LOOKUP_REGEX='s/ \([0-9]\w\)/?\1/g;s/[!]/*/g;s/ \+ /*/g;s/ /*/g'

err() { echo "$@" 1>&2; exit 1; }

# get md5sum for path
__anime_hash() {
   local bname="$@"; local md5=
   [[   -d "$bname" ]] && bname="$(echo "$bname" | sed 's/\/*$//')"
   [[ ! -d "$bname" ]] && bname="$(dirname "$bname")"
   md5="$(echo "$bname" | md5sum)"
   echo "${md5%% *}"
}

# basename and echo files only
__anime_base_f() {
   while read fn; do
      [[ -f "$fn" ]] && basename "$fn"
   done
}

# basename and echo directories only
__anime_base_d() {
   while read fn; do
      [[ -d "$fn" ]] && basename "$fn"
   done
}

# get anime list from location (files only)
# $1 = directory to search
# $2 = search term
_anime_get_f() {
   local db="$1"; local md5="$(__anime_hash "$1")"; shift; local name="$@"
   [[ -f "$_LIBANIME_CACHE/$md5.afil" ]] && { grep -i "$name" "$_LIBANIME_CACHE/$md5.afil"; return; } ||
   locate -d "$_LIBANIME_DB" "$db" | __anime_base_f | \
      grep -ve "$CACHE_IGNORE_EGREP" | sed "$CACHE_STORE_REGEX" | perl -p -e 's/^\n//g' | \
      tee "$_LIBANIME_CACHE/$md5.afil" | grep -i "$name"
}

# get anime list from location (directories only)
# $1 = directory to search
# $2 = search term
_anime_get_d() {
   local db="$1"; local md5="$(__anime_hash "$1")"; shift; local name="$@"
   [[ -f "$_LIBANIME_CACHE/$md5.adir" ]] && { grep -i "$name" "$_LIBANIME_CACHE/$md5.adir"; return; } ||
   locate -d "$_LIBANIME_DB" "$db" | __anime_base_d | \
      grep -ve "$CACHE_IGNORE_EGREP" | sed "$CACHE_STORE_REGEX" | perl -p -e 's/^\n//g' | \
      tee "$_LIBANIME_CACHE/$md5.adir" | grep -i "$name"
}

# lookup anime from _get list (files only)
# $1 = directory to search
# $2 = search term
_anime_lookup_f() {
   local db="$1"; local md5="$(__anime_hash "$db")";
   shift; local lookup="$(echo "$@" | sed "$CACHE_LOOKUP_REGEX")"
   # echo "$db/*$lookup*" 1>&2
   locate -d "$_LIBANIME_DB" "$db/*$lookup*" | grep -ve "$CACHE_IGNORE_EGREP" | tail -n1
}

# lookup anime from _get list (directories only)
_anime_lookup_d() {
   local db="$1"; local md5="$(__anime_hash "$db")";
   shift; local lookup="$(echo "$@" | sed "$CACHE_LOOKUP_REGEX")"
   locate -d "$_LIBANIME_DB" "$db/*$lookup*" | grep -ve "$CACHE_IGNORE_EGREP" | tail -n1
}

# purge cache
_anime_purge() {
   [[ -d "$_LIBANIME_CACHE" ]] && {
      rm "$_LIBANIME_CACHE/*.afil"
      rm "$_LIBANIME_CACHE/*.adir"
   }
}

# update cache
_anime_update() {
   local hasd=0; local hasf=0;
   local md5="$(__anime_hash "$@")"

   # remove cache files
   [[ -f "$_LIBANIME_CACHE/$md5.afil" ]] && {
      rm "$_LIBANIME_CACHE/$md5.afil"
      hasf=1
   }
   [[ -f "$_LIBANIME_CACHE/$md5.adir" ]] && {
      rm "$_LIBANIME_CACHE/$md5.adir"
      hasd=1
   }

   # update database
   updatedb -l 0 -o "$_LIBANIME_DB" -U "$_ANIME_ROOT"

   # update cache files
   [[ $hasd -eq 1 ]] &&
      _anime_get_d "$@" &> /dev/null
   [[ $hasf -eq 1 ]] &&
      _anime_get_f "$@" &> /dev/null
}

# pass main $@ arguments here
_anime_init() {
   local sft=0
   [[ "$1" == "-r" ]] &&
   { _ANIME_ROOT="$2"; shift 2; sft=2; }

   [[ -d "$_ANIME_ROOT" ]] ||
      err "$_ANIME_ROOT: directory does not exist"

   # db is not set
   [[ -n "$_LIBANIME_DB" ]] ||
      err "\$_LIBANIME_DB is not set!"

   # cache is not set
   [[ -n "$_LIBANIME_CACHE" ]] ||
      err "\$_LIBANIME_CACHE is not set!"

   # create cache dir, if it doesn't exist
   [[ -d "$_LIBANIME_CACHE" ]] ||
      mkdir "$_LIBANIME_CACHE"

   # time to set correct variables
   _ANIME_SEED="$_ANIME_ROOT/$_ANIME_SEED"
   _ANIME_WATCHING="$_ANIME_ROOT/$_ANIME_WATCHING"
   _ANIME_WATCHED="$_ANIME_ROOT/$_ANIME_WATCHED"

   # final checks
   [[ -d "$_ANIME_SEED" ]] ||
      err "$_ANIME_SEED: directory does not exist"
   [[ -d "$_ANIME_WATCHING" ]] ||
      err "$_ANIME_WATCHING: directory does not exist"
   [[ -d "$_ANIME_WATCHED" ]] ||
      err "$_ANIME_WATCHED: directory does not exist"

   # update database
   updatedb -l 0 -o "$_LIBANIME_DB" -U "$_ANIME_ROOT"

   # shifted arguments
   return $sft
}
